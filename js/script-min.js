"use strict";function _classCallCheck(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function i(i,e){for(var t=0;t<e.length;t++){var s=e[t];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(i,s.key,s)}}return function(e,t,s){return t&&i(e.prototype,t),s&&i(e,s),e}}(),Game=function(){function i(e){_classCallCheck(this,i),this.canvas=document.getElementById(e),this.ctx=this.canvas.getContext("2d"),this.gameSize={x:this.canvas.width,y:this.canvas.height},this.player=new Player(this.gameSize,this.collisions),this.ball=new Ball(this.gameSize),this.bricks=this.drawBricks(),this.lives=3,this.score=0,this.collisions=new CollisionDetection(this.ball,this.player,this.gameSize,this.bricks)}return _createClass(i,[{key:"drawRect",value:function i(e,t){this.ctx.clearRect(0,0,this.gameSize.x,this.gameSize.y),this.ctx.fillRect(e.center.x-e.size.x/2,e.center.y-e.size.y/2,e.size.x,e.size.y),this.ctx.fillRect(t.center.x-t.size.x/2,t.center.y-t.size.y/2,t.size.x,t.size.y);for(var s=0;s<this.bricks.length;s++)this.ctx.fillRect(this.bricks[s].center.x-this.bricks[s].size.x/2,this.bricks[s].center.y-this.bricks[s].size.y/2,this.bricks[s].size.x,this.bricks[s].size.y)}},{key:"drawBricks",value:function i(){for(var e=[],t=0;t<540;t++){var s=22+t%20*24,n=40+t%27*10;e.push(new Brick({x:s,y:n}))}return e}},{key:"filterBricks",value:function i(){var e=this;this.bricks=this.bricks.filter(function(i){return!e.collisions.brickHit(i)})}},{key:"update",value:function i(){this.filterBricks(),this.player.update(),this.collisions.brickCollision(this.bricks),this.ball.update(this.collisions),this.collisions.bricks=this.bricks,this.updateScore()}},{key:"updateLives",value:function i(){this.collisions.ballDrop()&&console.log(this.lives)}},{key:"draw",value:function i(){this.drawRect(this.player,this.ball)}},{key:"play",value:function i(){this.update(),this.draw()}},{key:"playGame",value:function i(){var e=this;setInterval(function(){return e.play()},10)}}]),i}(),Player=function(){function i(e){_classCallCheck(this,i),this.size={x:100,y:10},this.center={x:e.x/2,y:e.y-2},this.input=new Input}return _createClass(i,[{key:"update",value:function i(){this.input.keyboardPress(this.input.key.left)?this.center.x-=4:this.input.keyboardPress(this.input.key.right)&&(this.center.x+=4)}},{key:"printSide",value:function i(){this.input.keyboardPress(this.input.key.left)}}]),i}(),Input=function(){function i(){_classCallCheck(this,i),this.keyState={},this.key={left:37,right:39,space:32}}return _createClass(i,[{key:"keyboardPress",value:function i(e){var t=this;return window.onkeydown=function(i){t.keyState[i.keyCode]=!0},window.onkeyup=function(i){t.keyState[i.keyCode]=!1},!0===this.keyState[e]}}]),i}(),Ball=function(){function i(e,t){_classCallCheck(this,i),this.gameSize=e,this.size={x:6,y:6},this.center={x:250,y:450},this.velocity={x:2,y:-2}}return _createClass(i,[{key:"moveBall",value:function i(){this.center.x+=this.velocity.x,this.center.y+=this.velocity.y}},{key:"update",value:function i(e){e.hitWall()&&(this.velocity.x=-this.velocity.x),e.hitCeiling()&&(this.velocity.y=-this.velocity.y),e.ballHit()&&(this.velocity.y=-this.velocity.y);var t=this;e.bricks.forEach(function(i){e.brickHit(i)&&(t.velocity.y=-t.velocity.y)}),this.moveBall()}}]),i}(),Brick=function i(e){_classCallCheck(this,i),this.size={x:20,y:7},this.center=e},CollisionDetection=function(){function i(e,t,s,n){_classCallCheck(this,i),this.ball=e,this.player=t,this.gameSize=s,this.bricks=n}return _createClass(i,[{key:"ballHit",value:function i(){var e=this.ball.size.x/2;return this.ball.center.y==this.gameSize.y&&this.player.center.x-this.player.size.x/2<this.ball.center.x&&this.ball.center.x<this.player.center.x+this.player.size.x/2}},{key:"hitWall",value:function i(){var e=this.ball.size.x/2;return this.ball.center.x>this.gameSize.x-e||this.ball.center.x<e}},{key:"hitCeiling",value:function i(){var e=this.ball.size.x/2;return this.ball.center.y<e}},{key:"brickHit",value:function i(e){var t=e.center.x-e.size.x/2,s=e.center.y-e.size.y/2;return this.ball.center.x>t&&this.ball.center.x<t+e.size.x&&this.ball.center.y>s&&this.ball.center.y<s+e.size.y}},{key:"brickCollision",value:function i(){this.bricks.forEach(function(i){})}},{key:"ballDrop",value:function i(){return this.ball.center.y>this.gameSize.y}}]),i}();window.onload=function(){new Game("screen").playGame()};